<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Saturday, September 26, 2015, 3:52 AM -->
<!-- MuClient version 4.94 -->

<!-- Plugin "BrewBot" generated by Plugin Wizard -->

<muclient>
<plugin
   name="BrewBot"
   author="angelinblackink"
   id="cd12c30ce260323b77c3f9fc"
   language="Lua"
   purpose="Brewing Potions!"
   save_state="y"
   date_written="2015-09-26 03:43:11"
   requires="4.94"
   version="1.0"
   >
<description trim="y">
<![CDATA[
Hey guys here's a little plugin for brewing your own potions!

You will need to set a few things:

1. set BrewBed [bag you store your pots in while brewing]
(You have to do this one or it won't cork properly)

2. set BrewBed [Whatever you want to rest on while brewing.]
(Can be left blank.)

3. set BrewDrink [Your cup or container to keep your mana regen up.]
(Can leave this blank)


To activate:
brewstart [potion to brew]

--Make sure you have your bag open, bed and drink available and your vials/corks/components in your inventory--

To stop:
brewstop

--Pretty much!--
]]>
</description>

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger
   custom_colour="11"
   enabled="y"
   group="Brewing"
   keep_evaluating="y"
   match="^An empty glass vial explodes violently\!$"
   regexp="y"
   repeat="y"
   send_to="12"
   sequence="100"
  >
  <send>bbargs=GetVariable ("BrewBag")
   bbedargs=GetVariable ("BrewBed")
   bdargs=GetVariable ("BrewDrink")
   EnableTriggerGroup("Brewing2",true)
   if bdargs == nil then
    Note("No drink set!")
   else
    Send("drink "..bdargs)
    Send("drink "..bdargs)
    Send("drink "..bdargs)
   end
   if bbedargs == nil then
    Send("sleep")
    Note("No bed set!")
   else
    Send("sleep "..bbedargs)
   end
  </send>
  </trigger>
  <trigger
   custom_colour="11"
   enabled="y"
   group="Brewing"
   keep_evaluating="y"
   match="^The magic enchantment has failed \-\-\- the potion vanishes\.$"
   regexp="y"
   repeat="y"
   send_to="12"
   sequence="100"
  >
  <send>bbargs=GetVariable ("BrewBag")
   bbedargs=GetVariable ("BrewBed")
   bdargs=GetVariable ("BrewDrink")
   EnableTriggerGroup("Brewing2",true)
   if bdargs == nil then
    Note("No drink set!")
   else
    Send("drink "..bdargs)
    Send("drink "..bdargs)
    Send("drink "..bdargs)
   end
   if bbedargs == nil then
    Note("No bed set!")
	Send("sleep")
   else
    Send("sleep "..bbedargs)
   end
  </send>
  </trigger>
  <trigger
   custom_colour="9"
   enabled="y"
   group="Brewing"
   keep_evaluating="y"
   match="^You have imbued a new spell to the potion\.$"
   regexp="y"
   repeat="y"
   send_to="12"
   sequence="100"
  >
  <send>bbargs=GetVariable ("BrewBag")
   bbedargs=GetVariable ("BrewBed")
   bdargs=GetVariable ("BrewDrink")
   EnableTriggerGroup("Brewing2",true)
   Send("cork potion")
   Send("remove potion")
   if bbargs == nil then
    Note("No bag set!")
   else
    Send("put potion "..bbargs)
    Send("search "..bbargs)
   end
   if bdargs == nil then
    Note("No drink set!")
   else
    Send("drink "..bdargs)
   end
   if bbedargs == nil then
    Note("No bed set!")
	Send("sleep")
   else
    Send("sleep "..bbedargs)
   end
  </send>
  </trigger>
  <trigger
   custom_colour="9"
   enabled="y"
   group="Brewing"
   keep_evaluating="y"
   match="^You do not have that item\.$"
   regexp="y"
   repeat="y"
   send_to="12"
   sequence="100"
  >
  <send>bbargs=GetVariable ("BrewBag")
   bbedargs=GetVariable ("BrewBed")
   bdargs=GetVariable ("BrewDrink")
   EnableTriggerGroup("Brewing",false)
   Send("stop all")
   if bbargs == nil then
    Note("No bag set!")
   else
		if bdargs == nil then
			ColourNote ("red", "black", "No drink set!")
		else 
			Send("put "..bdargs.." "..bbargs)
		end
		if bbedargs == nil then
			ColourNote ("red", "black", "No bed set!")
		else 
			Send("put "..bbedargs.." "..bbargs)
		end
    Send("get all.pot "..bbargs)
    Send("search "..bbargs)
	Send("close "..bbargs)
   end
   Send("remove vial")
  </send>
  </trigger>
  <trigger
   custom_colour="14"
   enabled="y"
   group="Brewing"
   keep_evaluating="y"
   match="^(.*?) You lack the proper component to brew that spell\.$"
   regexp="y"
   repeat="y"
   send_to="12"
   sequence="100"
  >
  <send>bbargs=GetVariable ("BrewBag")
   bbedargs=GetVariable ("BrewBed")
   bdargs=GetVariable ("BrewDrink")
   EnableTriggerGroup("Brewing",false)
   Send("stop all")
   if bbargs == nil then
    Note("No bag set!")
   else
		if bdargs == nil then
			ColourNote ("red", "black", "No drink set!")
		else 
			Send("put "..bdargs.." "..bbargs)
		end
		if bbedargs == nil then
			ColourNote ("red", "black", "No bed set!")
		else 
			Send("put "..bbedargs.." "..bbargs)
		end
    Send("get all.pot "..bbargs)
    Send("search "..bbargs)
	Send("close "..bbargs)
   end
   Send("remove vial")
   Note("Done brewing!")
   </send>
  </trigger>
  <trigger
   custom_colour="17"
   enabled="y"
   group="Brewing"
   keep_evaluating="y"
   match="^\-\-\&gt; Turn\.$"
   regexp="y"
   repeat="y"
   sequence="100"
   other_text_colour="white"
  >
  <send>inv
  </send>
  </trigger>
  <trigger
   custom_colour="5"
   enabled="y"
   group="Brewing"
   keep_evaluating="y"
   match="^You don\'t have enough mana\.$"
   regexp="y"
   repeat="y"
   send_to="12"
   sequence="100"
  >
  <send>
   brewargs=GetVariable ("Brewing1")
   bbargs=GetVariable ("BrewBag")
   bbedargs=GetVariable ("BrewBed")
   EnableTriggerGroup("Brewing2",true)
   if bbargs == nil then
    Note("No bag set!")
   else
    Send("search "..bbargs)
   end
   if bbedargs == nil then
    Note("No bed set!")
	Send("sleep")
   else
    Send("sleep "..bbedargs)
   end
   </send>
  </trigger>
  <trigger
   custom_colour="5"
   group="Brewing2"
   keep_evaluating="y"
   match="^Your mana is fully restored\.$"
   regexp="y"
   repeat="y"
   send_to="12"
   sequence="100"
  >
  <send>brewargs=GetVariable ("Brewing1")
   bbedargs=GetVariable ("BrewBed")
   bdargs=GetVariable ("BrewDrink")
   EnableTriggerGroup("Brewing2",false)
   Send("Wake")
   if bbedargs == nil then
    Note("No bed set!")
	Send("rest")
   else
    Send("rest "..bbedargs)
   end
   if bdargs == nil then
    Note("No drink set!")
   else
    Send("drink "..bdargs)
   end
   Send("hold vial")
   Send("brew "..brewargs)
  </send>
  </trigger>
  
  
</triggers>

<!--  Aliases  -->

<aliases>
  <alias
   match="^brewstart (.*?)$"
   enabled="y"
   group="Brewing3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("Brewing1", "%1")
   brewargs=GetVariable ("Brewing1")
   bbedargs=GetVariable ("BrewBed")
   bdargs=GetVariable ("BrewDrink")
   EnableTriggerGroup("Brewing",true)
   if bbargs == nil then
    Note("No bag set!")
   else
    Send("open "..bbargs)
		if bdargs == nil then
			ColourNote ("red", "black", "No drink set!")
		else 
			Send("get "..bdargs.." "..bbargs)
			Send("drink "..bdargs)
			Send("drink "..bdargs)
		end
		if bbedargs == nil then
			ColourNote ("red", "black", "No bed set!")
		else 
			Send("get "..bbedargs.." "..bbargs)
		end
   end
   Send("hold vial")
   Send("brew "..brewargs)
   Note("Starting potion brewing now!")
  </send>
  </alias>
  <alias
   match="^brewstop$"
   enabled="y"
   group="Brewing3"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>bbargs=GetVariable ("BrewBag")
   bbedargs=GetVariable ("BrewBed")
   bdargs=GetVariable ("BrewDrink")
   EnableTriggerGroup("Brewing",false)
   Send("stop all")
   if bbargs == nil then
    Note("No bag set!")
   else
		if bdargs == nil then
			ColourNote ("red", "black", "No drink set!")
		else 
			Send("put "..bdargs.." "..bbargs)
		end
		if bbedargs == nil then
			ColourNote ("red", "black", "No bed set!")
		else 
			Send("put "..bbedargs.." "..bbargs)
		end
    Send("get all.pot "..bbargs)
    Send("search "..bbargs)
	Send("close "..bbargs)
   end
   Send("remove vial")
   Note("Ceasing potion brewing now!")
  </send>
  </alias>
  <alias
   match="^brewdrink (.*?)$"
   enabled="y"
   group="Brewing3"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("BrewDrink", "%1")
   bdargs=GetVariable ("BrewDrink")
				if bdargs == nil then
				ColourNote ("red", "black", "No drink set!")
				else 
				ColourNote ("lime", "black", "Drink is now set as "..bdargs)
				end
  </send>
  </alias>
  <alias
   match="^brewbed (.*?)$"
   enabled="y"
   group="Brewing3"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("BrewBed", "%1")
   bbedargs=GetVariable ("BrewBed")
				if bbedargs == nil then
				ColourNote ("red", "black", "No bed set!")
				else 
				ColourNote ("lime", "black", "Bed is now set as "..bbedargs)
				end
  </send>
  </alias>
  <alias
   match="^brewbag (.*?)$"
   enabled="y"
   group="Brewing3"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable ("BrewBag", "%1")
   bbargs=GetVariable ("BrewBag")
				if bbargs == nil then
				ColourNote ("red", "black", "No bag set!")
				else 
				ColourNote ("lime", "black", "Bag is now set as "..bbargs)
				end
  </send>
  </alias>
</aliases>


<!--  Plugin help  -->

<aliases>
  <alias
   script="OnHelp"
   match="brewbot help"
   enabled="y"
  >
  </alias>
</aliases>

<script>
<![CDATA[
function OnHelp ()
  world.Note (world.GetPluginInfo (world.GetPluginID (), 3))
end
]]>
</script> 

</muclient>
