<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Friday, September 04, 2015, 9:03 AM -->
<!-- MuClient version 4.94 -->
<!-- Written by Nick Gammon -->
<!-- Home Page: http://www.mushclient.com/ -->
<muclient>

<!-- aliases -->

<aliases
   muclient_version="4.94"
   world_file_version="15"
   date_saved="2015-09-04 09:03:14"
  >
  <alias
   match="REST"
   enabled="y"
   group="ocb_Utilities"
   sequence="100"
  >
  <send>bedargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MyBed")
mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
Send("open"..mainargs)
Send("get"..bedargs..mainargs)
Send("close"..mainargs)
Send("rest")</send>
  </alias>
  <alias
   match="SLEEP"
   enabled="y"
   group="ocb_Utilities"
   sequence="100"
  >
  <send>bedargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MyBed")
mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
Send("open"..mainargs)
Send("get"..bedargs..mainargs)
Send("close"..mainargs)
Send("sleep")</send>
  </alias>
  <alias
   match="^bedset (.*?)$"
   enabled="y"
   group="OCB_ItemSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("MyBed", "%1")</send>
  </alias>
  <alias
   match="^bpart (.*?)$"
   enabled="y"
   group="ocb_QuestParts"
   regexp="y"
   sequence="100"
  >
  <send>shinargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "ShinBag")
mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
Send("open"..mainargs)
Send("get"..shinargs..mainargs)
Send("get all.%1"..shinargs)
Send("put all.shinare"..mainargs)
Send("get slat"..mainargs)
Send("get hinge"..mainargs)
Send("get lid"..mainargs)
Send("get lock"..mainargs)
Send("get key"..mainargs)
Send("get all.shinare"..mainargs)
Send("comb part slat")
Send("comb part slat")
Send("comb part slat")
Send("comb part slat")
Send("comb part slat")
Send("comb part slat")
Send("comb part hinge")
Send("comb part hinge")
Send("comb part lid")
Send("comb part lock")
Send("comb part key")
Send("search part")
Send("put all.%1"..shinargs)
Send("put"..shinargs..mainargs)
Send("close"..mainargs)
</send>
  </alias>
  <alias
   match="^fpart (.*?)$"
   enabled="y"
   group="ocb_QuestParts"
   regexp="y"
   sequence="100"
  >
  <send>lanceargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "LanceBag")
mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
Send("open"..mainargs)
Send("get"..lanceargs..mainargs)
Send("get all.%1"..lanceargs)
Send("put all.knight"..lanceargs)
Send("put all.footman"..mainargs)
Send("get shaft"..mainargs)
Send("get dragonshield"..mainargs)
Send("get cap"..mainargs)
Send("get clamp"..mainargs)
Send("comb %1 2.%1")
Send("comb part shaft")
Send("comb part dragonshield")
Send("comb part cap")
Send("comb part clamp")
Send("get all.footman"..mainargs)
Send("search part")
Send("put all.dragonlance"..lanceargs)
Send("put"..lanceargs..mainargs)
Send("close"..mainargs)
</send>
  </alias>
  <alias
   match="^itemset 1 (.*?)$"
   enabled="y"
   group="OCB_ItemSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("Item1", "%1")</send>
  </alias>
  <alias
   match="^itemset 2 (.*?)$"
   enabled="y"
   group="OCB_ItemSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("Item2", "%1")</send>
  </alias>
  <alias
   match="^itemset 3 (.*?)$"
   enabled="y"
   group="OCB_ItemSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("Item3", "%1")</send>
  </alias>
  <alias
   match="^itemset 4 (.*?)$"
   enabled="y"
   group="OCB_ItemSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("Item4", "%1")</send>
  </alias>
  <alias
   match="^itemset 5 (.*?)$"
   enabled="y"
   group="OCB_ItemSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("Item5", "%1")</send>
  </alias>
  <alias
   match="^kpart (.*?)$"
   enabled="y"
   group="ocb_QuestParts"
   regexp="y"
   sequence="100"
  >
  <send>lanceargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "LanceBag")
mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
Send("open"..mainargs)
Send("get"..lanceargs..mainargs)
Send("get all.%1"..lanceargs)
Send("put all.footm"..lanceargs)
Send("put all.knight"..mainargs)
Send("get Shaft"..mainargs)
Send("get Sleeve"..mainargs)
Send("get Mount"..mainargs)
Send("get Pin"..mainargs)
Send("get Post"..mainargs)
Send("get Dragonshield"..mainargs)
Send("get Cap"..mainargs)
Send("get Clamp"..mainargs)
Send("combine %1 2.%1")
Send("comb part shaft")
Send("comb part sleeve")
Send("comb part mount")
Send("comb part pin")
Send("comb part post")
Send("comb part dragonshield")
Send("comb part cap")
Send("comb part clamp")
Send("get all.dragonlance"..mainargs)
Send("search part")
Send("put all.dragonlance"..lanceargs)
Send("put"..lanceargs..mainargs)
Send("close"..mainargs)
</send>
  </alias>
  <alias
   match="^lightset (.*?)$"
   enabled="y"
   group="OCB_ItemSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("MyLight", "%1")</send>
  </alias>
  <alias
   match="^mbox (.*?)$"
   enabled="y"
   group="ocb_QuestParts"
   regexp="y"
   sequence="100"
  >
  <send>shinargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "ShinBag")
mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
Send("open"..mainargs)
Send("get"..shinargs..mainargs)
Send("get all.%1"..shinargs)
Send("comb part slat")
Send("comb part slat")
Send("comb part slat")
Send("comb part slat")
Send("comb part slat")
Send("comb part slat")
Send("comb part hinge")
Send("comb part hinge")
Send("comb part lid")
Send("comb part lock")
Send("comb part key")
Send("search part")
Send("put all.%1"..shinargs)
Send("put"..shinargs..mainargs)
Send("close"..mainargs)
</send>
  </alias>
  <alias
   match="^mfoot (.*?)$"
   enabled="y"
   group="ocb_QuestParts"
   regexp="y"
   sequence="100"
  >
  <send>lanceargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "LanceBag")
mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
Send("open"..mainargs)
Send("get"..lanceargs..mainargs)
Send("get all.%1"..lanceargs)
Send("put all.knight"..lanceargs)
Send("comb part shaft")
Send("comb part Dragonshield")
Send("comb part Cap")
Send("comb part Clamp")
Send("search part")
Send("put all.%1"..lanceargs)
Send("put"..lanceargs..mainargs)
Send("close"..mainargs)
</send>
  </alias>
  <alias
   match="^mknight (.*?)$"
   enabled="y"
   group="ocb_QuestParts"
   regexp="y"
   sequence="100"
  >
  <send>lanceargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "LanceBag")
mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
Send("open"..mainargs)
Send("get"..lanceargs..mainargs)
Send("get all.%1"..lanceargs)
Send("put all.footm"..lanceargs)
Send("comb part Shaft")
Send("comb part Sleeve")
Send("comb part Mount")
Send("comb part Pin")
Send("comb part Post")
Send("comb part Dragonshield")
Send("comb part Cap")
Send("comb part Clamp")
Send("search part")
Send("put all.%1"..lanceargs)
Send("put"..lanceargs..mainargs)
Send("close"..mainargs)
</send>
  </alias>
  <alias
   match="^ocbhelp 1$"
   enabled="y"
   group="OCB_Help"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Note ( "\" )
  Note ( "What is OCB?\" )
  Note ( "****************************************************************\" )
  Note ( "\" )
  Note ( "Obsessive Compulsive Bags is for organizing your inventory,\" )
  Note ( "bags and also your quest items. The plugin is meant for a main\" )
  Note ( "bag, such as a backpack, and eight stackable bags nested inside\" )
  Note ( "for potions, gear, loot, coupons, miscellaneous items, shinare\" )
  Note ( "pieces and lance pieces.\" )
  Note ( "\" )
  Note ( "I suggest you take 8 bags of marbles or leather money pouches\" )
  Note ( "and then restringing them for convenience. You CAN just use any\" )
  Note ( "8 stock bags, but be mindful of which keywords you choose.\" )
  Note ( "\" )
  Note ( "This plugin also contains commands that create and then build\" )
  Note ( "both shinare and quest pieces!\" )
  Note ( "****************************************************************\" )
  Note ( "\" )
  Note ( "\" )
  </send>
  </alias>
  <alias
   match="^ocbhelp 2$"
   enabled="y"
   group="OCB_Help"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Note ( "\" )
  Note ( "How to set your bag variables.\" )
  Note ( "****************************************************************\" )
  Note ( "\" )
  Note ( "Syntax:    set 'bag type' 'your bag'\" )
  Note ( "Example:   set mainbag backpack\" )
  Note ( "\" )
  Note ( "You should only have to set these once, unless you change bags.\" )
  Note ( "This is a set of eight variables that must be set. You can\" )
  Note ( "always set a single bag for many purposes, but it isn't\" )
  Note ( "recommended.\" )
  Note ( "\" )
  Note ( "Bag types:\" )
  Note ( "\" )
  Note ( "&#9;coupbag&#9;&#9;Coupons\" )
  Note ( "&#9;gearbag&#9;&#9;Extra Gear\" )
  Note ( "&#9;lancebag  &#9;Lancequest Pieces\" )
  Note ( "&#9;lootbag   &#9;Unsorted Loot\" )
  Note ( "&#9;mainbag   &#9;Main Backpack Type\" )
  Note ( "&#9;mapbag    &#9;Maps\" )
  Note ( "&#9;miscbag   &#9;Components, Collectables, Ect.\" )
  Note ( "&#9;potbag   &#9;Potions and Scrolls\" )
  Note ( "&#9;shinbag   &#9;Shinare's Quest Pieces\" )
  Note ( "\" )
  Note ( "****************************************************************\" )
  Note ( "\" )
  Note ( "Syntax: ocbshow bags" )
  Note ( "\" )
  Note ( "This command will show you the order and keyword your bags are\" )
  Note ( "set to.")
  Note ( "\" )
  Note ( "****************************************************************\" )
  Note ( "\" )
  Note ( "\" ) </send>
  </alias>
  <alias
   match="^ocbhelp 3$"
   enabled="y"
   group="OCB_Help"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Note ( "\" )
  Note ( "How to set the order of the bags inside your Main Bag.\" )
  Note ( "****************************************************************\" )
  Note ( "\" )
  Note ( "Syntax:    orderset 'order #' 'your bag'\" )
  Note ( "Example:   orderset 1 sack\" )
  Note ( "\" )
  Note ( "You may choose to order the bags inside of your Main Bag, or\" )
  Note ( "you may also choose to let the plugin set them for you. If you\" )
  Note ( "do not set these manually, they will be set in the order that\" )
  Note ( "you set their keywords. The bags are ordered 1 through 7.\" )
  Note ( "\" )
  Note ( "IMPORTANT:\" )
  Note ( "It is recommended that you do this AFTER you have set ALL of\" )
  Note ( "your secondary bags to avoid accidentally resetting your \" )
  Note ( "preferred order.\" )
  Note ( "\" )
  Note ( "DO NOT include your main bag.\" )
  Note ( "\" )
  Note ( "****************************************************************\" )
  Note ( "\" )
  Note ( "Syntax: ocbshow bags" )
  Note ( "\" )
  Note ( "This command will show you the order and keyword your bags are\" )
  Note ( "set to.")
  Note ( "\" )
  Note ( "****************************************************************\" )
  Note ( "\" )
  Note ( "\" )
  </send>
  </alias>
  <alias
   match="^ocbhelp 4$"
   enabled="y"
   group="OCB_Help"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Note ( "\" )
  Note ( "How to set and order the items in your Main Bag.\" )
  Note ( "****************************************************************\" )
  Note ( "\" )
  Note ( "Syntax:    itemset 'order #' 'item'\" )
  Note ( "Example:   itemset 1 tent\" )
  Note ( "\" )
  Note ( "Some items are just better in the main bag, such as healing\" )
  Note ( "potions, hearts and your tent. Possibly other things you may\" )
  Note ( "wish to keep on hand. This plugin is set to accommodate items\" )
  Note ( "1 through 5.\" )
  Note ( "\" )
  Note ( "NOTE:\" )
  Note ( "These objects, unlike your secondary bags, MUST be ordered\" )
  Note ( "manually if you wish for them to be returned to your Main Bag\" )
  Note ( "when you use the 'obag' command.\" )
  Note ( "\" )
  Note ( "****************************************************************\" )
  Note ( "\" )
  Note ( "Syntax:    bedset 'item'\" )
  Note ( "Example:   bedset tent\" )
  Note ( "\" )
  Note ( "This command designates an item for sleeping in. Note that\" )
  Note ( "it must still be assigned a number in order to be returned to\" )
  Note ( "the bag when ordered.\" )
  Note ( "\" )
  Note ( "****************************************************************\" )
  Note ( "\" )
  Note ( "Syntax:    lightset 'item'\" )
  Note ( "Example:   lightset torch\" )
  Note ( "\" )
  Note ( "This command designates an item as your light and allows for \" )
  Note ( "easy filling with fuel. This item does not need to be ordered.\" )
  Note ( "\" )
  Note ( "****************************************************************\" )
  Note ( "\" )
  Note ( "Syntax:    'ocbshow items'\" )
  Note ( "\" )
  Note ( "This command will show you what the current items set and what" )
  Note ( "their set order is.\" )
  Note ( "\" )
  Note ( "****************************************************************\" )
  Note ( "\" )
  Note ( "\" )
  </send>
  </alias>
  <alias
   match="^ocbhelp 5$"
   enabled="y"
   group="OCB_Help"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Note ( "\" )
  Note ( "Bag Commands\" )
  Note ( "****************************************************************\" )
  Note ( "\" )
  Note ( "These commands allow you to work with the items inside of your\" )
  Note ( "bags.\" )
  Note ( "\" )
  Note ( "For more information, see the following individual help topics:\" )
  Note ( "\" )
  Note ( "  drink   loot   eat    get\" )
  Note ( "  order   put    read   search\" )
  Note ( "  compare        examine\" )
  Note ( "\" )
  Note ( "****************************************************************\" )
  Note ( "\" )
  Note ( "\" )
  </send>
  </alias>
  <alias
   match="^ocbhelp 6$"
   enabled="y"
   group="OCB_Help"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Note ( "\" )
  Note ( "Quest Commands\" )
  Note ( "****************************************************************\" )
  Note ( "\" )
  Note ( "These commands allow you to manage quest items with more ease.\" )
  Note ( "\" )
  Note ( "NOTE:\" )
  Note ( "While this plugin can handle more than one. it is recommended \" )
  Note ( "that you only keep ONE of each partial at a time to avoid\" )
  Note ( "mixups.\" )
  Note ( "\" )
  Note ( "****************************************************************\" )
  Note ( "\" )
  Note ( "Syntax:       mbox 'type'" )
  Note ( "Example:      mbox garnet\" )
  Note ( "\" )
  Note ( "Syntax:       mfoot 'type'\" )
  Note ( "Example:      mfoot rose\" )
  Note ( "\" )
  Note ( "Syntax:       mknight 'type'\" )
  Note ( "Example:      mknight crown\" )
  Note ( "\" )
  Note ( "Filling an already present partial.\" )
  Note ( "\" )
  Note ( "****************************************************************\" )
  Note ( "\" )
  Note ( "Syntax:       bpart 'type'\" )
  Note ( "Example:      bpart diamond\" )
  Note ( "\" )
  Note ( "Syntax:       fpart 'type'\" )
  Note ( "Example:      fpart crown\" ) 
  Note ( "\" )
  Note ( "Syntax:       kpart 'type'\" )
  Note ( "Example:      kpart sword\" )
  Note ( "\" )
  Note ( "Creating a partial and then fills it.\" )
  Note ( "\" )
  Note ( "****************************************************************\" )
  Note ( "\" )
  Note ( "Syntax:       sbox\" )
  Note ( "Syntax:       slance\" )
  Note ( "\" )
  Note ( "Search through partials to see what pieces they have.\" )
  Note ( "\" )
  Note ( "****************************************************************\" )
  Note ( "\" )
  Note ( "\" )</send>
  </alias>
  <alias
   match="^ocbhelp 7$"
   enabled="y"
   group="OCB_Help"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Note ( "\" )
  Note ( "Utility Commands\" )
  Note ( "****************************************************************\" )
  Note ( "\" )
  Note ( "These commands allow you to do little extras as well as\" )
  Note ( "display and set information such as variables.\" )
  Note ( "\" )
  Note ( "For more information, see the following individual help topics:\" )
  Note ( "\" )
  Note ( "  list   rest\" )
  Note ( "  loot    money\" )
  Note ( "  light\" )
  Note ( "\" )
  Note ( "****************************************************************\" )
  Note ( "\" )
  Note ( "\" )
  </send>
  </alias>
  <alias
   match="^ocbhelp compare$"
   enabled="y"
   group="OCB_Help"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>
   Note ( "\" )
   Note ( "Reading, Examine and Compare\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Syntax:       r'type' item\"
   Note ( "Example:      rmap neraka\" )
   Note ( "\" )
   Note ( "Syntax:       x'type' item\"
   Note ( "Example:      xcoup rpa\" )
   Note ( "\" )
   Note ( "Syntax:       c'type' item\"
   Note ( "Example:      cloot shield\" )
   Note ( "\" )
   Note ( "This command allows you to read, compare or examine an item\" )
   Note ( "from your bags with ease. Note that you must manually get items\" )
   Note ( "to compare them to themselves, still.\")
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Available Bag Types:\" )
   Note ( "\" )
   Note ( "    Coup          Coupons\" )
   Note ( "    Gear          Extra Gear\" )
   Note ( "    Lance         Lancequest Pieces\" )
   Note ( "    Loot          Unsorted Loot\" )
   Note ( "    Main          Main Backpack Type\" )
   Note ( "    Map           Maps\" )
   Note ( "    Misc          Components, Collectables, Ect.\" )
   Note ( "    Pot           Potions and Scrolls\" )
   Note ( "    Shin          Shinare's Quest Pieces\" )
   Note ( "\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "\" )
  </send>
  </alias>
  <alias
   match="^ocbhelp eat$"
   enabled="y"
   group="OCB_Help"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>
   Note ( "\" )
   Note ( "Eat and Drink\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Syntax:       e'type' item\" )
   Note ( "Syntax:       d'type' item\" )
   Note ( "Example:      ecoup home\" )
   Note ( "Example:      dpot recall\" )
   Note ( "\" )
   Note ( "This command is the universal command used to get items from\" )
   Note ( "your bag and immediately eat or drink them.\" )
   Note ( "\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Available Bag Types:\" )
   Note ( "\" )
   Note ( "    Coup          Coupons\" )
   Note ( "    Main          Main Backpack Type\" )
   Note ( "    Misc          Components, Collectables, Ect.\" )
   Note ( "    Pot           Potions and Scrolls\" )
   Note ( "\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "\" )
  </send>
  </alias>
  <alias
   match="^ocbhelp examine$"
   enabled="y"
   group="OCB_Help"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>
   Note ( "\" )
   Note ( "Reading, Examine and Compare\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Syntax:       r'type' item\"
   Note ( "Example:      rmap neraka\" )
   Note ( "\" )
   Note ( "Syntax:       x'type' item\"
   Note ( "Example:      xcoup rpa\" )
   Note ( "\" )
   Note ( "Syntax:       c'type' item\"
   Note ( "Example:      cloot shield\" )
   Note ( "\" )
   Note ( "This command allows you to read, compare or examine an item\" )
   Note ( "from your bags with ease. Note that you must manually get items\" )
   Note ( "to compare them to themselves, still.\")
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Available Bag Types:\" )
   Note ( "\" )
   Note ( "    Coup          Coupons\" )
   Note ( "    Gear          Extra Gear\" )
   Note ( "    Lance         Lancequest Pieces\" )
   Note ( "    Loot          Unsorted Loot\" )
   Note ( "    Main          Main Backpack Type\" )
   Note ( "    Map           Maps\" )
   Note ( "    Misc          Components, Collectables, Ect.\" )
   Note ( "    Pot           Potions and Scrolls\" )
   Note ( "    Shin          Shinare's Quest Pieces\" )
   Note ( "\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "\" )
  </send>
  </alias>
  <alias
   match="^ocbhelp get$"
   enabled="y"
   group="OCB_Help"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>
   Note ( "\" )
   Note ( "Get\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Syntax:       g'type' item\" )
   Note ( "Syntax:       g'type' all.item\" )
   Note ( "Example:      ggear leggings\" )
   Note ( "Example:      gpot all.sanc\" )
   Note ( "\" )
   Note ( "This command is the universal command used to get items from\" )
   Note ( "each of your bags.\" )
   Note ( "\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Available Bag Types::\" )
   Note ( "\" )
   Note ( "    Coup          Coupons\" )
   Note ( "    Gear          Extra Gear\" )
   Note ( "    Lance         Lancequest Pieces\" )
   Note ( "    Loot          Unsorted Loot\" )
   Note ( "    Main          Main Backpack Type\" )
   Note ( "    Map           Maps\" )
   Note ( "    Misc          Components, Collectables, Ect.\" )
   Note ( "    Pot           Potions and Scrolls\" )
   Note ( "    Shin          Shinare's Quest Pieces\" )
   Note ( "\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "\" )
  </send>
  </alias>
  <alias
   match="^ocbhelp list$"
   enabled="y"
   group="OCB_Help"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>
   Note ( "\" )
   Note ( "Resting\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Syntax:       torch\" )
   Note ( "\" )
   Note ( "This command gets fuel, fills your light with it and then \" )
   Note ( "puts it away. Be aware that you must store your fuel with \" )
   Note ( "your potions for this command to work correctly.\" )
   Note ( "\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "\" )
  </send>
  </alias>
  <alias
   match="^ocbhelp loot$"
   enabled="y"
   group="OCB_Help"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>
   Note ( "\" )
   Note ( "Loot\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Syntax:       dloot\" )
   Note ( "Syntax:       ploot\" )
   Note ( "\" )
   Note ( "These commands dump food and crappy drinks from your inventory,\" )
   Note ( "then deposits components, quest items and random items into\" )
   Note ( "their appropriate bags. The dloot command dumps things to the\" )
   Note ( "ground and the ploot command dumps things into the pit.\" )
   Note ( "\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Syntax:       aloot\" )
   Note ( "\" )
   Note ( "This command retrieves your hoard of loot for selling and organization.\" )
   Note ( "\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Money\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Syntax:       dcash amount 'coin type'\" )
   Note ( "Syntax:       dcash 10000 copper\" )
   Note ( "\" )
   Note ( "These commands puts your money where it won't weigh as much with fewer commands.\" )
   Note ( "\" )
   Note ( "\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Syntax:       gcash\" )
   Note ( "\" )
   Note ( "This command gets all of your money from where you have it stashed.\" )
   Note ( "\" )
   Note ( "\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "\" )
  </send>
  </alias>
  <alias
   match="^ocbhelp money$"
   enabled="y"
   group="OCB_Help"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>
   Note ( "\" )
   Note ( "Money\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Syntax:       dcash amount 'coin type'\" )
   Note ( "Syntax:       dcash 10000 copper\" )
   Note ( "\" )
   Note ( "These commands puts your money where it won't weigh as much with fewer commands.\" )
   Note ( "\" )
   Note ( "\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Syntax:       gcash\" )
   Note ( "\" )
   Note ( "This command gets all of your money from where you have it stashed.\" )
   Note ( "\" )
   Note ( "\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "\" )
  </send>
  </alias>
  <alias
   match="^ocbhelp order$"
   enabled="y"
   group="OCB_Help"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>
   Note ( "\" )
   Note ( "Order\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Syntax:       o'type'\" )
   Note ( "Example:      omain\" )
   Note ( "\" )
   Note ( "This command orders your main bag and quest bags for ease of\" )
   Note ( "viewing. The quest bags are pre-set, but your main bag can be\" )
   Note ( "set manually. See 'ocbhelp 3' and 'ocbhelp 4' for information\" )
   Note ( "on how.\" )
   Note ( "\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Available Bag Types:\" )
   Note ( "\" )
   Note ( "    Lance         Lancequest Pieces\" )
   Note ( "    Main          Main Backpack Type\" )
   Note ( "    Shin          Shinare's Quest Pieces\" )
   Note ( "\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "\" )
  </send>
  </alias>
  <alias
   match="^ocbhelp put$"
   enabled="y"
   group="OCB_Help"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>
   Note ( "\" )
   Note ( "Put\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Syntax:       p'type' item\" )
   Note ( "Syntax:       p'type' all.item\" )
   Note ( "Example:      pcoup restring\" )
   Note ( "Example:      ppot all.recall\" )
   Note ( "\" )
   Note ( "This command is the universal command used to put items into all\" )
   Note ( "of your bags.\" )
   Note ( "\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Available Bag Types:\" )
   Note ( "\" )
   Note ( "    Coup          Coupons\" )
   Note ( "    Gear          Extra Gear\" )
   Note ( "    Lance         Lancequest Pieces\" )
   Note ( "    Loot          Unsorted Loot\" )
   Note ( "    Main          Main Backpack Type\" )
   Note ( "    Map           Maps\" )
   Note ( "    Misc          Components, Collectables, Ect.\" )
   Note ( "    Pot           Potions and Scrolls\" )
   Note ( "    Shin          Shinare's Quest Pieces\" )
   Note ( "\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "\" )
  </send>
  </alias>
  <alias
   match="^ocbhelp read$"
   enabled="y"
   group="OCB_Help"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>
   Note ( "\" )
   Note ( "Reading, Examine and Compare\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Syntax:       r'type' item\"
   Note ( "Example:      rmap neraka\" )
   Note ( "\" )
   Note ( "Syntax:       x'type' item\"
   Note ( "Example:      xcoup rpa\" )
   Note ( "\" )
   Note ( "Syntax:       c'type' item\"
   Note ( "Example:      cloot shield\" )
   Note ( "\" )
   Note ( "This command allows you to read, compare or examine an item\" )
   Note ( "from your bags with ease. Note that you must manually get items\" )
   Note ( "to compare them to themselves, still.\")
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Available Bag Types:\" )
   Note ( "\" )
   Note ( "    Coup          Coupons\" )
   Note ( "    Gear          Extra Gear\" )
   Note ( "    Lance         Lancequest Pieces\" )
   Note ( "    Loot          Unsorted Loot\" )
   Note ( "    Main          Main Backpack Type\" )
   Note ( "    Map           Maps\" )
   Note ( "    Misc          Components, Collectables, Ect.\" )
   Note ( "    Pot           Potions and Scrolls\" )
   Note ( "    Shin          Shinare's Quest Pieces\" )
   Note ( "\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "\" )
  </send>
  </alias>
  <alias
   match="^ocbhelp rest$"
   enabled="y"
   group="OCB_Help"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>
   Note ( "\" )
   Note ( "Resting\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Syntax:       SLEEP\" )
   Note ( "Syntax:       REST\" )
   Note ( "\" )
   Note ( "These commands automatically gets your sleeping item out of\" )
   Note ( "your bag and then sets you to rest or sleep with it. This IS\" )
   Note ( "case sensitive.\" )
   Note ( "\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Syntax:       WAKE\" )
   Note ( "\" )
   Note ( "This command automatically puts your sleeping item safely back\" )
   Note ( "into your backpack as you wake. This IS case sensitive.\" )
   Note ( "\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "\" )
  </send>
  </alias>
  <alias
   match="^ocbhelp search$"
   enabled="y"
   group="OCB_Help"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>
   Note ( "\" )
   Note ( "Search\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Syntax:       s'type'\" )
   Note ( "Example:      sloot\" )
   Note ( "Example:      smap\" )
   Note ( "\" )
   Note ( "This command is the universal command used to list the items\" )
   Note ( "in each of your bags.\" )
   Note ( "\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "Available Bag Types:\" )
   Note ( "\" )
   Note ( "    Coup          Coupons\" )
   Note ( "    Gear          Extra Gear\" )
   Note ( "    Lance         Lancequest Pieces\" )
   Note ( "    Loot          Unsorted Loot\" )
   Note ( "    Main          Main Backpack Type\" )
   Note ( "    Map           Maps\" )
   Note ( "    Misc          Components, Collectables, Ect.\" )
   Note ( "    Pot           Potions and Scrolls\" )
   Note ( "    Shin          Shinare's Quest Pieces\" )
   Note ( "\" )
   Note ( "****************************************************************\" )
   Note ( "\" )
   Note ( "\" )
  </send>
  </alias>
  <alias
   match="^ocbhelp$"
   enabled="y"
   group="OCB_Help"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Note ( "***********************Table of Contents************************\" )
  Note ( "\" )
  Note ( "Syntax:       ocbhelp #\" )
  Note ( "Syntax:       ocbhelp topic\" )
  Note ( "\" )
  Note ( "  1. How to use this plugin and what it does.\" )
  Note ( "  2. How to set your bags.\" )
  Note ( "  3. How to set the order of your secondary bags.\" )
  Note ( "  4. How to set the order of your items.\" )
  Note ( "  5. Main Commands.\" )
  Note ( "  6. Quest Item Commands.\" )
  Note ( "  7. Utility Commands" )
  Note ( "\" )
  Note ( "****************************************************************\" )
  Note ( "\" )
  Note ( "\" )
  </send>
  </alias>
  <alias
   match="^ocblist bags$"
   enabled="y"
   group="ocb_Utilities"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>mainargs = GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 coupargs = GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "CoupBag")
 gearargs = GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "GearBag")
 lanceargs = GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "LanceBag")
 lootargs = GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "LootBag")
 mapargs = GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MapBag")
 miscargs = GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MiscBag")
 potargs = GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "PotBag")
 shinargs = GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "ShinBag")
 Note ( "  Bag Type ********************* My Bag ************************\" )
 Note ( "****************************************************************\" )
if mainargs == nil then
    Note ( "  MainBag                      * This bag has not been set.")
else
    Note ( "  MainBag                      * "..mainargs )
end

   if coupargs == nil then
    Note ( "  CoupBag                      * This bag has not been set.")
   else
    Note ( "  CoupBag                      * "..coupargs )
end

   if gearargs == nil then
    Note ( "  GearBag                      * This bag has not been set.")
   else
    Note ( "  GearBag                      * "..gearargs )
end

   if lanceargs == nil then
    Note ( "  LanceBag                     * This bag has not been set.")
   else
    Note ( "  LanceBag                     * "..lanceargs )
end

   if lootargs == nil then
    Note ( "  LootBag                      * This bag has not been set.")
   else
    Note ( "  LootBag                      * "..lootargs )
end

   if mapargs == nil then
    Note ( "  MapBag                       * This bag has not been set.")
   else
    Note ( "  MapBag                       * "..mapargs )
end

   if miscargs == nil then
    Note ( "  MiscBag                      * This bag has not been set.")
   else
    Note ( "  MiscBag                      * "..miscargs )
end

   if potargs == nil then
    Note ( "  PotBag                       * This bag has not been set.")
   else
    Note ( "  PotBag                       * "..potargs )
end

   if shinrgs == nil then
    Note ( "  ShinBag                      * This bag has not been set.")
   else
    Note ( "  ShinBag                      * "..shinargs )
end

  Note ( "****************************************************************\" )
  Note ( "\" )
  </send>
  </alias>
  <alias
   match="^ocblist items$"
   enabled="y"
   group="ocb_Utilities"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>i1args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "Item1")
 i2args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "Item2")
 i3args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "Item3")
 i4args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "Item4")
 i5args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "Item5")
 bedargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MyBed")
 lightargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MyLight")
 Note ( "*************************** My Bed *****************************\" )
   if b1args == nil then
    Note ( "                      A bed has not set.\")
   else
    Note ( "                          "..bedargs )
end
 Note ( "****************************************************************\" )
 Note ( "\" )
 Note ( "************************** My Light ****************************\" )
   if b1args == nil then
    Note ( "                     A light has not set.\")
   else
    Note ( "                          "..lightargs )
end
 Note ( "****************************************************************\" )
 Note ( "\" )
 Note ( "  Item Order ******************* Item **************************\" )
 Note ( "****************************************************************\" )
   if i1args == nil then
    Note ( "  1st Item                     * This bag slot is not set.\")
   else
    Note ( "  1st Item                     * "..i1args )
end
   if i2args == nil then
    Note ( "  2nd Item                     * This bag slot is not set.\")
   else
    Note ( "  2nd Item                     * "..i2args )
end
   if i3args == nil then
    Note ( "  3rd Item                     * This bag slot is not set.\")
   else
    Note ( "  3rd Item                     * "..i3args )
end
   if i4args == nil then
    Note ( "  4th Item                     * This bag slot is not set.\")
   else
    Note ( "  4th Item                     * "..i4args )
end
   if i5args == nil then
    Note ( "  5th Item                     * This bag slot is not set.\")
   else
    Note ( "  5th Item                     * "..i5args )
end
 Note ( "****************************************************************\" )
    Note ( "\" )
 Note ( "\" )
  </send>
  </alias>
  <alias
   match="^ocblist order$"
   enabled="y"
   group="ocb_Utilities"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>b1args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "bag1")
 b2args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "bag2")
 b3args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "bag3")
 b4args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "bag4")
 b5args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "bag5")
 b6args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "bag6")
 b7args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "bag7")
 b8args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "bag8")
 Note ( "  Bag Order ******************** My Bag ************************\" )
 Note ( "****************************************************************\" )
   if b1args == nil then
    Note ( "  1st Bag                      * This bag slot is not set.\")
   else
    Note ( "  1st Bag                      * "..b1args )
end
   if b2args == nil then
    Note ( "  2nd Bag                      * This bag slot is not set.\")
   else
    Note ( "  2nd Bag                      * "..b2args )
end
   if b3args == nil then
    Note ( "  3rd Bag                      * This bag slot is not set.\")
   else
    Note ( "  3rd Bag                      * "..b3args )
end
   if b4args == nil then
    Note ( "  4th Bag                      * This bag slot is not set.\")
   else
    Note ( "  4th Bag                      * "..b4args )
end
   if b5args == nil then
    Note ( "  5th Bag                      * This bag slot is not set.\")
   else
    Note ( "  5th Bag                      * "..b5args )
end
   if b6args == nil then
    Note ( "  6th Bag                      * This bag slot is not set.\")
   else
    Note ( "  6th Bag                      * "..b6args )
end
   if b7args == nil then
    Note ( "  7th Bag                      * This bag slot is not set.\")
   else
    Note ( "  7th Bag                      * "..b7args )
end
   if b8args == nil then
    Note ( "  8th Bag                      * This bag slot is not set.\")
   else
    Note ( "  8th Bag                      * "..b8args )
end

 Note ( "****************************************************************\" )
    Note ( "\" )
  </send>
  </alias>
  <alias
   match="^orderset 1 (.*?)$"
   enabled="y"
   group="OCB_OrderSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("bag1", "%1")</send>
  </alias>
  <alias
   match="^orderset 2 (.*?)$"
   enabled="y"
   group="OCB_OrderSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("bag2", "%1")</send>
  </alias>
  <alias
   match="^orderset 3 (.*?)$"
   enabled="y"
   group="OCB_OrderSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("bag3", "%1")</send>
  </alias>
  <alias
   match="^orderset 4 (.*?)$"
   enabled="y"
   group="OCB_OrderSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("bag4", "%1")</send>
  </alias>
  <alias
   match="^orderset 5 (.*?)$"
   enabled="y"
   group="OCB_OrderSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("bag5", "%1")</send>
  </alias>
  <alias
   match="^orderset 6 (.*?)$"
   enabled="y"
   group="OCB_OrderSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("bag6", "%1")</send>
  </alias>
  <alias
   match="^orderset 7 (.*?)$"
   enabled="y"
   group="OCB_OrderSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("bag7", "%1")</send>
  </alias>
  <alias
   match="^orderset 8 (.*?)$"
   enabled="y"
   group="OCB_OrderSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("bag8", "%1")</send>
  </alias>
  <alias
   match="^set coupbag (.*?)$"
   enabled="y"
   group="OCB_BagSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("CoupBag", "%1")
SetVariable("bag8", "%1")</send>
  </alias>
  <alias
   match="^set gearbag (.*?)$"
   enabled="y"
   group="OCB_BagSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("GearBag", "%1")
SetVariable("bag7", "%1")</send>
  </alias>
  <alias
   match="^set lancebag (.*?)$"
   enabled="y"
   group="OCB_BagSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("LanceBag", "%1")
SetVariable("bag2", "%1")</send>
  </alias>
  <alias
   match="^set lootbag (.*?)$"
   enabled="y"
   group="OCB_BagSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("LootBag", "%1")
SetVariable("bag6", "%1")</send>
  </alias>
  <alias
   match="^set mainbag (.*?)$"
   enabled="y"
   group="OCB_BagSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("MainBag", "%1")</send>
  </alias>
  <alias
   match="^set mapbag (.*?)$"
   enabled="y"
   group="OCB_BagSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("MapBag", "%1")
SetVariable("bag5", "%1")</send>
  </alias>
  <alias
   match="^set miscbag (.*?)$"
   enabled="y"
   group="OCB_BagSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("MiscBag", "%1")
SetVariable("bag4", "%1")</send>
  </alias>
  <alias
   match="^set potbag (.*?)$"
   enabled="y"
   group="OCB_BagSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("PotBag", "%1")
SetVariable("bag3", "%1")</send>
  </alias>
  <alias
   match="^set shinbag (.*?)$"
   enabled="y"
   group="OCB_BagSet"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>SetVariable("ShinBag", "%1")
SetVariable("bag1", "%1")</send>
  </alias>
  <alias
   match="aloot"
   enabled="y"
   group="ocb_Utilities"
   sequence="100"
  >
  <send>lootargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "LootBag")
mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
Send("open"..mainargs)
Send("get"..lootargs..mainargs)
Send("get all.compon"..lootargs)
Send("get all.figur"..lootargs)
Send("get all.die"..lootargs)
Send("get all.tile"..lootargs)
Send("get all.statu"..lootargs)
Send("get all.rand"..lootargs)
Send("put"..lootargs..mainargs)
Send("close"..mainargs)
</send>
  </alias>
  <alias
   match="cgear *"
   enabled="y"
   group="ocb_GearBag"
   sequence="100"
  >
  <send>gearargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "GearBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..gearargs..mainargs)
 Send ( "get %1"..gearargs)
 Send ( "compare %1" )
 Send ( "put"..gearargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="cloot *"
   enabled="y"
   group="ocb_LootBag"
   sequence="100"
  >
  <send>lootargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "LootBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..lootargs..mainargs)
 Send ( "get %1"..lootargs)
 Send ( "compare %1")
 Send ( "put"..lootargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="cmisc *"
   enabled="y"
   group="ocb_MiscBag"
   sequence="100"
  >
  <send>miscargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MiscBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..miscargs..mainargs)
 Send ( "get %1"..miscargs)
 Send ( "compare %1" )
 Send ( "put"..miscargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="ctype *"
   enabled="y"
   group="ocb_TypeBag"
   sequence="100"
  >
  <send>mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get %1"..mainargs)
 Send ( "compare %1" )
 Send ( "put %1"..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="dcash * *"
   enabled="y"
   group="ocb_Utilities"
   sequence="100"
  >
  <send>mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
Send("open"..mainargs)
Send("put %1 %2"..mainargs)
Send("close"..mainargs)
</send>
  </alias>
  <alias
   match="dmain *"
   enabled="y"
   group="ocb_MainBag"
   sequence="100"
  >
  <send>mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send("open"..mainargs)
 Send("get %1"..mainargs)
 Send("drink %1")
 Send("close"..mainargs)
 </send>
  </alias>
  <alias
   match="dpot *"
   enabled="y"
   group="ocb_PotBag"
   sequence="100"
  >
  <send>potargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "PotBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..potargs..mainargs)
 Send ( "get %1"..potargs)
 Send ( "drink %1" )
 Send ( "search"..potargs)
 Send ( "put"..potargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="dquest"
   enabled="y"
   group="ocb_QuestParts"
   sequence="100"
  >
  <send>lanceargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "LanceBag")
shinargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "ShinBag")
mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
Send("open"..mainargs)
Send("get"..lanceargs..mainargs)
Send("get"..shinargs..mainargs)
Send("put all.shinare"..shinargs)
Send("put all.dragonlance"..lanceargs)
Send("put"..shinargs..mainargs)
Send("put"..lanceargs..mainargs)
Send("close"..mainargs)
</send>
  </alias>
  <alias
   match="dtrash"
   enabled="y"
   group="ocb_Utilities"
   sequence="100"
  >
  <send>lootargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "LootBag")
mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
Send("drop all.flask")
Send("drop all.jug")
Send("drop all.wine")
Send("drop all.water")
Send("drop all.canteen")
Send("drop all.gourd")
Send("drop all.food")
Send("get all.food")
Send("open"..mainargs)
Send("get"..lootargs..mainargs)
Send("put all.compon"..lootargs)
Send("put all.figur"..lootargs)
Send("put all.die"..lootargs)
Send("put all.tile"..lootargs)
Send("put all.statu"..lootargs)
Send("put all.rand"..lootargs)
Send("put"..lootargs..mainargs)
Send("close"..mainargs)
</send>
  </alias>
  <alias
   match="emain *"
   enabled="y"
   group="ocb_MainBag"
   sequence="100"
  >
  <send>mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send("open"..mainargs)
 Send("get %1"..mainargs)
 Send("eat %1")
 Send("close"..mainargs)
 </send>
  </alias>
  <alias
   match="epot *"
   enabled="y"
   group="ocb_PotBag"
   sequence="100"
  >
  <send>potargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "PotBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..potargs..mainargs)
 Send ( "get %1"..potargs..mainargs)
 Send ( "eat %1" )
 Send ( "search"..potargs)
 Send ( "put"..potargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="gbox *"
   enabled="y"
   group="ocb_ShinBag"
   sequence="100"
  >
  <send>shinargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "ShinBag" )
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..shinargs..mainargs)
 Send ( "get %1"..shinargs)
 Send ( "put"..shinargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="gcash"
   enabled="y"
   group="ocb_Utilities"
   sequence="100"
  >
  <send>mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
Send("open"..mainargs)
Send("get coins"..mainargs)
Send("close"..mainargs)
</send>
  </alias>
  <alias
   match="gcoup *"
   enabled="y"
   group="ocb_Coupbag"
   sequence="100"
  >
  <send>coupargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "Coupbag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..coupargs..mainargs)
 Send ( "get %1"..coupargs)
 Send ( "put"..coupargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="ggear *"
   enabled="y"
   group="ocb_GearBag"
   sequence="100"
  >
  <send>gearargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "GearBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..gearargs..mainargs)
 Send ( "get %1"..gearargs)
 Send ( "put"..gearargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="glance *"
   enabled="y"
   group="ocb_LBag"
   sequence="100"
  >
  <send>lanceargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "LanceBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..lanceargs..mainargs)
 Send ( "get %1"..lanceargs)
 Send ( "put"..lanceargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="gloot *"
   enabled="y"
   group="ocb_LootBag"
   sequence="100"
  >
  <send>lootargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "LootBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..lootargs..mainargs)
 Send ( "get %1"..lootargs)
 Send ( "put"..lootargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="gmain *"
   enabled="y"
   group="ocb_MainBag"
   sequence="100"
  >
  <send>mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send("open"..mainargs)
 Send("get %1"..mainargs)
 Send("close"..mainargs)
 </send>
  </alias>
  <alias
   match="gmap *"
   enabled="y"
   group="ocb_MapBag"
   sequence="100"
  >
  <send>mapargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MapBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..mapargs..mainargs)
 Send ( "get %1"..mapargs)
 Send ( "put"..mapargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="gmisc *"
   enabled="y"
   group="ocb_MiscBag"
   sequence="100"
  >
  <send>miscargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MiscBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..miscargs..mainargs)
 Send ( "get %1"..miscargs)
 Send ( "put"..miscargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="gpot *"
   enabled="y"
   group="ocb_PotBag"
   sequence="100"
  >
  <send>potargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "PotBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..potargs..mainargs)
 Send ( "get %1"..potargs)
 Send ( "put"..potargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="lbox"
   enabled="y"
   group="ocb_ShinBag"
   sequence="100"
  >
  <send>shinargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "ShinBag" )
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..shinargs..mainargs)
 Send ( "search"..shinargs)
 Send ( "put"..shinargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="lcoup"
   enabled="y"
   group="ocb_Coupbag"
   sequence="100"
  >
  <send>coupargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "Coupbag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..coupargs..mainargs)
 Send ( "search"..coupargs)
 Send ( "put"..coupargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="lgear"
   enabled="y"
   group="ocb_GearBag"
   sequence="100"
  >
  <send>gearargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "GearBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..gearargs..mainargs)
 Send ( "search"..gearargs)
 Send ( "put"..gearargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="llance"
   enabled="y"
   group="ocb_LBag"
   sequence="100"
  >
  <send>lanceargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "LanceBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..lanceargs..mainargs)
 Send ( "search"..lanceargs)
 Send ( "put"..lanceargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="lloot"
   enabled="y"
   group="ocb_LootBag"
   sequence="100"
  >
  <send>lootargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "LootBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..lootargs..mainargs)
 Send ( "search"..lootargs)
 Send ( "put"..lootargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="lmain"
   enabled="y"
   group="ocb_MainBag"
   sequence="100"
  >
  <send>mainargs = GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send("open" .. mainargs)
 Send("search" .. mainargs)
 Send("close" .. mainargs)
 </send>
  </alias>
  <alias
   match="lmap"
   enabled="y"
   group="ocb_MapBag"
   sequence="100"
  >
  <send>mapargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MapBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..mapargs..mainargs)
 Send ( "search"..mapargs)
 Send ( "put"..mapargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="lmisc"
   enabled="y"
   group="ocb_MiscBag"
   sequence="100"
  >
  <send>miscargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MiscBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..miscargs..mainargs)
 Send ( "search"..miscargs)
 Send ( "put"..miscargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="lpot"
   enabled="y"
   group="ocb_PotBag"
   sequence="100"
  >
  <send>potargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "PotBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..potargs..mainargs)
 Send ( "search"..potargs)
 Send ( "put"..potargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="obox"
   enabled="y"
   group="ocb_ShinBag"
   sequence="100"
  >
  <send>shinargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "ShinBag" )
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ("open"..shinargs..mainargs)
 Send ( "get" ..shinargs..mainargs)
 Send ( "get all"..shinargs)
 Send ( "put all.lock"..shinargs)
 Send ( "put all.key"..shinargs)
 Send ( "put all.lid"..shinargs)
 Send ( "put all.slat"..shinargs)
 Send ( "put all.hinge"..shinargs)
 Send ( "get all.shinare"..shinargs)
 Send ( "put all.diamond"..shinargs)
 Send ( "put all.ruby"..shinargs)
 Send ( "put all.emerald"..shinargs)
 Send ( "put all.pearl"..shinargs)
 Send ( "put all.opal"..shinargs)
 Send ( "put all.garnet"..shinargs)
 Send ( "get all.box"..shinargs)
 Send ( "put all.box"..shinargs)
 Send ( "search"..shinargs)
 Send ( "put" ..shinargs..mainargs)
 Send ( "close"..mainargs)
</send>
  </alias>
  <alias
   match="olance"
   enabled="y"
   group="ocb_LBag"
   sequence="100"
  >
  <send>lanceargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "LanceBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get spear"..mainargs)
 Send ( "get all"..lanceargs)
 Send ( "put all.cap"..lanceargs)
 Send ( "put all.clamp"..lanceargs)
 Send ( "put all.dragonshield"..lanceargs)
 Send ( "put all.lance"..lanceargs)
 Send ( "put all.mount"..lanceargs)
 Send ( "put all.pin"..lanceargs)
 Send ( "put all.post"..lanceargs)
 Send ( "put all.sleeve"..lanceargs)
 Send ( "get all"..lanceargs)
 Send ( "put all.rose"..lanceargs)
 Send ( "put all.crown"..lanceargs)
 Send ( "put all.sword"..lanceargs)
 Send ( "get all.part"..lanceargs)
 Send ( "put all.part"..lanceargs)
 Send ( "get all"..lanceargs)
 Send ( "put all.knight"..lanceargs)
 Send ( "put all.foot"..lanceargs)
 Send ( "search"..lanceargs)
 Send ( "put"..lanceargs..mainargs)
 Send ( "close"..mainargs)
</send>
  </alias>
  <alias
   match="omain"
   enabled="y"
   group="ocb_MainBag"
   sequence="100"
  >
  <send>b1args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "bag1")
 b2args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "bag2")
 b3args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "bag3")
 b4args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "bag4")
 b5args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "bag5")
 b6args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "bag6")
 b7args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "bag7")
 b8args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "bag8")
 i1args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "Item1")
 i2args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "Item2")
 i3args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "Item3")
 i4args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "Item4")
 i5args=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "Item5")
  send ("open 'saddle bag'")
  send ("get all 'saddle bag'
  if i5args == nil then 
  Note ("No item is set for slot 5, yet.\")
  else
  send ("put all"i5args..mainargs)
 end
  if i4args == nil then 
  Note ("No item is set for slot 4, yet.\")
  else
  send ("put all."i4args..mainargs)
 end
  if i3args == nil then 
  Note ("No item is set for slot 3, yet.\")
  else
  send ("put all."i3args..mainargs)
 end
  if i2args == nil then 
  Note ("No item is set for slot 2, yet.\")
  else
  send ("put all."i2args..mainargs)
 end
  if i1args == nil then 
  Note ("No item is set for slot 1, yet.\")
  else
  send ("put all."i1args..mainargs)
 end
 send ("put"..b8args..mainargs)
 send ("put"..b7args..mainargs)
 send ("put"..b6args..mainargs)
 send ("put"..b5args..mainargs)
 send ("put"..b4args..mainargs)
 send ("put"..b3args..mainargs)
 send ("put"..b2args..mainargs)
 send ("put"..b1args..mainargs)
 send ("search"..mainargs)
 send ("close"..mainargs)
 </send>
  </alias>
  <alias
   match="pbox *"
   enabled="y"
   group="ocb_ShinBag"
   sequence="100"
  >
  <send>shinargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "ShinBag" )
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..shinargs..mainargs)
 Send ( "put %1"..shinargs)
 Send ( "search"..shinargs)
 Send ( "put"..shinargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="pcoup *"
   enabled="y"
   group="ocb_Coupbag"
   sequence="100"
  >
  <send>coupargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "Coupbag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..coupargs..mainargs)
 Send ( "put %1"..coupargs)
 Send ( "search"..coupargs)
 Send ( "put"..coupargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="pgear *"
   enabled="y"
   group="ocb_GearBag"
   sequence="100"
  >
  <send>gearargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "GearBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..gearargs..mainargs)
 Send ( "put %1"..gearargs)
 Send ( "search"..gearargs)
 Send ( "put"..gearargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="plance *"
   enabled="y"
   group="ocb_LBag"
   sequence="100"
  >
  <send>lanceargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "LanceBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..lanceargs..mainargs)
 Send ( "put %1"..lanceargs)
 Send ( "search"..lanceargs)
 Send ( "put"..lanceargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="ploot *"
   enabled="y"
   group="ocb_LootBag"
   sequence="100"
  >
  <send>lootargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "LootBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..lootargs..mainargs)
 Send ( "put %1"..lootargs)
 Send ( "search"..lootargs)
 Send ( "put"..lootargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="pmain *"
   enabled="y"
   group="ocb_MainBag"
   sequence="100"
  >
  <send>mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send("open"..mainargs)
 Send("put %1"..mainargs)
 Send("search"..mainargs)
 Send("close"..mainargs)
 </send>
  </alias>
  <alias
   match="pmap *"
   enabled="y"
   group="ocb_MapBag"
   sequence="100"
  >
  <send>mapargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MapBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..mapargs..mainargs)
 Send ( "put %1"..mapargs)
 Send ( "search"..mapargs)
 Send ( "put"..mapargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="pmisc *"
   enabled="y"
   group="ocb_MiscBag"
   sequence="100"
  >
  <send>miscargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MiscBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..miscargs..mainargs)
 Send ( "put %1"..miscargs)
 Send ( "search"..miscargs)
 Send ( "put"..miscargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="ppot *"
   enabled="y"
   group="ocb_PotBag"
   sequence="100"
  >
  <send>potargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "PotBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..potargs..mainargs)
 Send ( "put %1"..potargs)
 Send ( "search"..potargs)
 Send ( "put"..potargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="ptrash"
   enabled="y"
   group="ocb_Utilities"
   sequence="100"
  >
  <send>lootargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "LootBag")
mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
Send("put all.flask pit")
Send("put all.jug pit")
Send("put all.wine pit")
Send("put all.water pit")
Send("put all.canteen pit")
Send("put all.gourd pit")
Send("put all.food pit")
Send("get all.food")
Send("open"..mainargs)
Send("get"..lootargs..mainargs)
Send("put all.compon"..lootargs)
Send("put all.figur"..lootargs)
Send("put all.die"..lootargs)
Send("put all.tile"..lootargs)
Send("put all.statu"..lootargs)
Send("put all.rand"..lootargs)
Send("put"..lootargs..mainargs)
Send("close"..mainargs)</send>
  </alias>
  <alias
   match="rmap *"
   enabled="y"
   group="ocb_MapBag"
   sequence="100"
  >
  <send>mapargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MapBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..mapargs..mainargs)
 Send ( "get %1"..mapargs)
 Send ( "read %1" )
 Send ( "put"..mapargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="rmisc *"
   enabled="y"
   group="ocb_MiscBag"
   sequence="100"
  >
  <send>miscargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MiscBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..miscargs..mainargs)
 Send ( "get %1"..miscargs)
 Send ( "read %1" )
 Send ( "put"..miscargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="rtype *"
   enabled="y"
   group="ocb_TypeBag"
   sequence="100"
  >
  <send>mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get %1"..mainargs)
 Send ( "read %1" )
 Send ( "put %1"..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="sbox"
   enabled="y"
   group="ocb_ShinBag"
   sequence="100"
  >
  <send>shinargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "ShinBag" )
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..shinargs..mainargs)
 Send ( "get all.box"..shinargs)
 Send ( "search garnet" )
 Send ( "search opal" )
 Send ( "search pearl" )
 Send ( "search emerald" )
 Send ( "search ruby" )
 Send ( "search diamond" )
 Send ( "put all.box"..shinargs)
 Send ( "put"..shinargs..mainargs)
 Send ( "close"..mainargs)
</send>
  </alias>
  <alias
   match="sbox"
   enabled="y"
   group="ocb_QuestParts"
   sequence="100"
  >
  <send>shinargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "ShinBag")
mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
Send("open"..mainargs)
Send("get"..shinargs..mainargs)
Send("get all.box"..shinargs)
Send("search garnet")
Send("search opal")
Send("search pearl")
Send("search emerald")
Send("search ruby")
Send("search diamond")
Send("put all.box"..shinargs)
Send("put"..shinargs..mainargs)
Send("close"..mainargs)
</send>
  </alias>
  <alias
   match="slance"
   enabled="y"
   group="ocb_LBag"
   sequence="100"
  >
  <send>lanceargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "LanceBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get spear"..mainargs)
 Send ( "get all.part"..lanceargs)
 Send ( "put all.box"..lanceargs)
 Send ( "search sword")
 Send ( "search 2.sword")
 Send ( "search rose")
 Send ( "search 2.rose")
 Send ( "search crown")
 Send ( "search 2.crown")
 Send ( "put all.part"..lanceargs)
 Send ( "put"..lanceargs..mainargs)
 Send ( "close"..mainargs)
</send>
  </alias>
  <alias
   match="slance"
   enabled="y"
   group="ocb_QuestParts"
   sequence="100"
  >
  <send>lanceargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "LanceBag")
mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
Send("open"..mainargs)
Send("get"..lanceargs..mainargs)
Send("get all.part"..lanceargs)
Send("put all.box"..lanceargs)
Send("search sword")
Send("search 2.sword")
Send("search rose")
Send("search 2.rose")
Send("search crown")
Send("search 2.crown")
Send("put all.part"..lanceargs)
Send("put"..lanceargs..mainargs)
Send("close"..mainargs)
</send>
  </alias>
  <alias
   match="torch"
   enabled="y"
   group="ocb_Utilities"
   sequence="100"
  >
  <send>lightargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MyLight")
potargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "PotBag")
mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
Send ( "open"..mainargs )
Send ( "get"..potargs..mainargs )
Send ( "get oil"..potargs )
Send ( "pour oil"..lightargs )
Send ( "pour oil"..lightargs )
Send ( "wear"..lightargs )
Send ( "put oil"..potargs )
Send ( "put"..potargs..mainargs )
Send ( "close"..mainargs )</send>
  </alias>
  <alias
   match="xcoup *"
   enabled="y"
   group="ocb_Coupbag"
   sequence="100"
  >
  <send>coupargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "Coupbag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..coupargs..mainargs)
 Send ( "get %1"..coupargs)
 Send ( "examine %1" )
 Send ( "put"..coupargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="xgear *"
   enabled="y"
   group="ocb_GearBag"
   sequence="100"
  >
  <send>gearargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "GearBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..gearargs..mainargs)
 Send ( "get %1"..gearargs)
 Send ( "examine %1" )
 Send ( "put"..gearargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="xloot *"
   enabled="y"
   group="ocb_LootBag"
   sequence="100"
  >
  <send>lootargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "LootBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..lootargs..mainargs)
 Send ( "get %1"..lootargs)
 Send ( "examine %1")
 Send ( "put"..lootargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="xmap *"
   enabled="y"
   group="ocb_MapBag"
   sequence="100"
  >
  <send>mapargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MapBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..mapargs..mainargs)
 Send ( "get %1"..mapargs)
 Send ( "examine %1" )
 Send ( "put"..mapargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="xmisc *"
   enabled="y"
   group="ocb_MiscBag"
   sequence="100"
  >
  <send>miscargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MiscBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..miscargs..mainargs)
 Send ( "get %1"..miscargs)
 Send ( "examine %1" )
 Send ( "put"..miscargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="xpot *"
   enabled="y"
   group="ocb_PotBag"
   sequence="100"
  >
  <send>potargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "PotBag")
 mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get"..potargs..mainargs)
 Send ( "get %1"..potargs)
 Send ( "examine %1" )
 Send ( "put"..potargs..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
  <alias
   match="xtype *"
   enabled="y"
   group="ocb_TypeBag"
   sequence="100"
  >
  <send>mainargs=GetPluginVariable ("6f1fa7e262d80bb399dc81f2", "MainBag")
 Send ( "open"..mainargs)
 Send ( "get %1"..mainargs)
 Send ( "examine %1" )
 Send ( "put %1"..mainargs)
 Send ( "close"..mainargs)
 </send>
  </alias>
</aliases>
</muclient>
