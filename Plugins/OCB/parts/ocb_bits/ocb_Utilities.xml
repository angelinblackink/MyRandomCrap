<aliases>
  <alias
   match="dcash * *"
   enabled="y"
   group="ocb_Utilities"
   send_to="12"
   sequence="100"
  >
  <send>mainargs=GetVariable ("MainBag")
if mainargs == nil then
ColourNote ("red", "black", "Main bag is not set!")
else 
Send("open"..mainargs)
Send("put %1 %2"..mainargs)
Send("close"..mainargs)
end
</send>
  </alias>
  <alias
   match="torch"
   enabled="y"
   group="ocb_Utilities"
   send_to="12"
   sequence="100"
  >
  <send>lightargs=GetVariable ("MyLight")
potargs=GetVariable ("PotBag")
mainargs=GetVariable ("MainBag")
if mainargs == nil then
ColourNote ("red", "black", "Your Main bag is not set!")
elseif potargs == nil then
ColourNote ("red", "black", "Your Potions bag is not set!")
elseif lightargs == nil then
ColourNote ("red", "black", "Your Light is not set!")
else
Send ( "open"..mainargs )
Send ( "get"..potargs..mainargs )
Send ( "get oil"..potargs )
Send ( "pour oil"..lightargs )
Send ( "pour oil"..lightargs )
Send ( "wear"..lightargs )
Send ( "put oil"..potargs )
Send ( "put"..potargs..mainargs )
Send ( "close"..mainargs )
end
</send>
  </alias>
  
  <alias
   match="dtrash"
   enabled="y"
   group="ocb_Utilities"
   send_to="12"
   sequence="100"
  >
  <send>lootargs=GetVariable ("LootBag")
mainargs=GetVariable ("MainBag")
if mainargs == nil then
ColourNote ("red", "black", "Your Main bag is not set!")
elseif lootargs == nil then
ColourNote ("red", "black", "Your Loot bag is not set!")
else
Send("drop all.flask")
Send("drop all.jug")
Send("drop all.wine")
Send("drop all.water")
Send("drop all.canteen")
Send("drop all.gourd")
Send("drop all.food")
Send("get all.food")
Send("open"..mainargs)
Send("get"..lootargs..mainargs)
Send("put all.compon"..lootargs)
Send("put all.figur"..lootargs)
Send("put all.die"..lootargs)
Send("put all.tile"..lootargs)
Send("put all.statu"..lootargs)
Send("put all.rand"..lootargs)
Send("put"..lootargs..mainargs)
Send("close"..mainargs)
end
</send>
  </alias>
  
  
  <alias
   match="gcash"
   enabled="y"
   group="ocb_Utilities"
   send_to="12"
   sequence="100"
  >
  <send>mainargs=GetVariable ("MainBag")
if mainargs == nil then
ColourNote ("red", "black", "Your Main bag is not set!")
else
Send("open"..mainargs)
Send("get coins"..mainargs)
Send("close"..mainargs)
end
</send>
  </alias>
  
  
  <alias
   match="aloot"
   enabled="y"
   group="ocb_Utilities"
   send_to="12"
   sequence="100"
  >
  <send>lootargs=GetVariable ("LootBag")
mainargs=GetVariable ("MainBag")
if mainargs == nil then
ColourNote ("red", "black", "Your Main bag is not set!")
elseif lootargs == nil then
ColourNote ("red", "black", "Your Loot bag is not set!")
else
Send("open"..mainargs)
Send("get"..lootargs..mainargs)
Send("get all.compon"..lootargs)
Send("get all.figur"..lootargs)
Send("get all.die"..lootargs)
Send("get all.tile"..lootargs)
Send("get all.statu"..lootargs)
Send("get all.rand"..lootargs)
Send("put"..lootargs..mainargs)
Send("close"..mainargs)
end
</send>
  </alias>
  
  

  <alias
   match="ptrash"
   enabled="y"
   group="ocb_Utilities"
   send_to="12"
   sequence="100"
  >
  <send>lootargs=GetVariable ("LootBag")
mainargs=GetVariable ("MainBag")
if mainargs == nil then
ColourNote ("red", "black", "Your Main bag is not set!")
elseif lootargs == nil then
ColourNote ("red", "black", "Your Loot bag is not set!")
else
Send("put all.flask pit")
Send("put all.jug pit")
Send("put all.wine pit")
Send("put all.water pit")
Send("put all.canteen pit")
Send("put all.gourd pit")
Send("put all.food pit")
Send("get all.food")
Send("open"..mainargs)
Send("get"..lootargs..mainargs)
Send("put all.compon"..lootargs)
Send("put all.figur"..lootargs)
Send("put all.die"..lootargs)
Send("put all.tile"..lootargs)
Send("put all.statu"..lootargs)
Send("put all.rand"..lootargs)
Send("put"..lootargs..mainargs)
Send("close"..mainargs)
end
</send>
  </alias>
  
  
  
  <alias
   match="REST"
   enabled="y"
   group="ocb_Utilities"
   send_to="12"
   sequence="100"
  >
  <send>bedargs=GetVariable ("MyBed")
mainargs=GetVariable ("MainBag")
if mainargs == nil then
ColourNote ("red", "black", "Your Main bag is not set!")
elseif bedargs == nil then
ColourNote ("red", "black", "Your bed is not set!")
else
Send("open"..mainargs)
Send("get"..bedargs..mainargs)
Send("close"..mainargs)
Send("rest")
end
</send>
  </alias>
  
  
  <alias
   match="SLEEP"
   enabled="y"
   group="ocb_Utilities"
   send_to="12"
   sequence="100"
  >
  <send>bedargs=GetVariable ("MyBed")
mainargs=GetVariable ("MainBag")
if mainargs == nil then
ColourNote ("red", "black", "Your Main bag is not set!")
elseif bedargs == nil then
ColourNote ("red", "black", "Your bed is not set!")
else
Send("open"..mainargs)
Send("get"..bedargs..mainargs)
Send("close"..mainargs)
Send("sleep")
end
</send>
  </alias>

  <alias
   match="^ocblist bags$"
   enabled="y"
   group="OCB_Utilities"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>mainargs=GetVariable ("MainBag")
	coupargs=GetVariable ("CoupBag")
	gearargs=GetVariable ("GearBag")
	lanceargs=GetVariable ("LanceBag")
	lootargs=GetVariable ("LootBag")
	mapargs=GetVariable ("MapBag")
	miscargs=GetVariable ("MiscBag")
	potargs=GetVariable ("PotBag")
	shinargs=GetVariable ("ShinBag")
	ColourNote ("silver", "black", "  Bag Type ", "darkred", "black", "********************* ", "silver", "black", "My Bag ", "darkred", "black", "************************\" )
	ColourNote ("darkred", "grey", "****************************************************************\" )
end
   if mainargs == nil then
    ColourNote ("silver", "black", "  MainBag                      ", "darkred", "black", "*", "red", "black", " This bag has not been set.\")
   else
    ColourNote ("silver", "black", "  MainBag                      ", "darkred", "black", "*", "silver", "black", "..mainargs )
end
   if coupargs == nil then
    ColourNote ("silver", "black", "  CoupBag                      ", "darkred", "black", "*", "red", "black", " This bag has not been set.\")
   else
    ColourNote ("silver", "black", "  CoupBag                      ", "darkred", "black", "*", "silver", "black", "..coupargs )
end
   if gearargs == nil then
    ColourNote ("silver", "black", "  GearBag                      ", "darkred", "black", "*", "red", "black", " This bag has not been set.\")
   else
    ColourNote ("silver", "black", "  GearBag                      ", "darkred", "black", "*", "silver", "black", "..gearargs )
end
   if lanceargs == nil then
    ColourNote ("silver", "black", "  LanceBag                     ", "darkred", "black", "*", "red", "black", " This bag has not been set.\")
   else
    ColourNote ("silver", "black", "  LanceBag                     ", "darkred", "black", "*", "silver", "black", "..lanceargs )
end
   if lootargs == nil then
    ColourNote ("silver", "black", "  LootBag                      ", "darkred", "black", "*", "red", "black", " This bag has not been set.\")
   else
    ColourNote ("silver", "black", "  LootBag                      ", "darkred", "black", "*", "silver", "black", "..lootargs )
end
   if mapargs == nil then
    ColourNote ("silver", "black", "  MapBag                       ", "darkred", "black", "*", "red", "black", " This bag has not been set.\")
   else
    ColourNote ("silver", "black", "  MapBag                       ", "darkred", "black", "*", "silver", "black", "..mapargs )
end
   if miscargs == nil then
    ColourNote ("silver", "black", "  MiscBag                      ", "darkred", "black", "*", "red", "black", " This bag has not been set.\")
   else
    ColourNote ("silver", "black", "  MiscBag                      ", "darkred", "black", "*", "silver", "black", "..miscargs )
end
   if potargs == nil then
    ColourNote ("silver", "black", "  PotBag                       ", "darkred", "black", "*", "red", "black", " This bag has not been set.\")
   else
    ColourNote ("silver", "black", "  PotBag                       ", "darkred", "black", "*", "silver", "black", "..potargs )
end
   if shinrgs == nil then
    ColourNote ("silver", "black", "  ShinBag                      ", "darkred", "black", "*", "red", "black", " This bag has not been set.\")
   else
    ColourNote ("silver", "black", "  ShinBag                      ", "darkred", "black", "*", "silver", "black", "..shinargs )
end

	ColourNote ("darkred", "grey", "****************************************************************\" )
    Note ( "\" )
  </send>
  </alias>
  
  <alias
   match="^ocblist order$"
   enabled="y"
   group="OCB_Utilities"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>b1args=GetVariable ("bag1")
	b2args=GetVariable ("bag2")
	b3args=GetVariable ("bag3")
	b4args=GetVariable ("bag4")
	b5args=GetVariable ("bag5")
	b6args=GetVariable ("bag6")
	b7args=GetVariable ("bag7")
	b8args=GetVariable ("bag8")
	ColourNote ("silver", "black", "  Bag Order", "darkred", "black", " ********************", "silver", "black", " My Bag", "darkred", "black", " ************************\" )
	ColourNote ("darkred", "grey", "****************************************************************\" )
end
   if b1args == nil then
    ColourNote ("silver", "black", "  1st Bag                      ", "darkred", "black", "*", "red", "black", " This bag slot is not set.\")
   else
    ColourNote ("silver", "black", "  1st Bag                      ", "darkred", "black", "*", "silver", "black", "..b1args )
end
   if b2args == nil then
    ColourNote ("silver", "black", "  2nd Bag                      ", "darkred", "black", "*", "red", "black", " This bag slot is not set.\")
   else
    ColourNote ("silver", "black", "  2nd Bag                      ", "darkred", "black", "*", "silver", "black", "..b2args )
end
   if b3args == nil then
    ColourNote ("silver", "black", "  3rd Bag                      ", "darkred", "black", "*", "red", "black", " This bag slot is not set.\")
   else
    ColourNote ("silver", "black", "  3rd Bag                      ", "darkred", "black", "*", "silver", "black", "..b3args )
end
   if b4args == nil then
    ColourNote ("silver", "black", "  4th Bag                      ", "darkred", "black", "*", "red", "black", " This bag slot is not set.\")
   else
    ColourNote ("silver", "black", "  4th Bag                      ", "darkred", "black", "*", "silver", "black", "..b4args )
end
   if b5args == nil then
    ColourNote ("silver", "black", "  5th Bag                      ", "darkred", "black", "*", "red", "black", " This bag slot is not set.\")
   else
    ColourNote ("silver", "black", "  5th Bag                      ", "darkred", "black", "*", "silver", "black", "..b5args )
end
   if b6args == nil then
    ColourNote ("silver", "black", "  6th Bag                      ", "darkred", "black", "*", "red", "black", " This bag slot is not set.\")
   else
    ColourNote ("silver", "black", "  6th Bag                      ", "darkred", "black", "*", "silver", "black", "..b6args )
end
   if b7args == nil then
    ColourNote ("silver", "black", "  7th Bag                      ", "darkred", "black", "*", "red", "black", " This bag slot is not set.\")
   else
    ColourNote ("silver", "black", "  7th Bag                      ", "darkred", "black", "*", "silver", "black", "..b7args )
end
   if b8args == nil then
    ColourNote ("silver", "black", "  8th Bag                      ", "darkred", "black", "*", "red", "black", " This bag slot is not set.\")
   else
    ColourNote ("silver", "black", "  8th Bag                      ", "darkred", "black", "*", "silver", "black", "..b8args )
end

	ColourNote ("darkred", "grey", "****************************************************************\" )
    Note ( "\" )
  </send>
  </alias>
  
  <alias
   match="^ocblist items$"
   enabled="y"
   group="OCB_Utilities"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>i1args=GetVariable ("Item1")
	i2args=GetVariable ("Item2")
	i3args=GetVariable ("Item3")
	i4args=GetVariable ("Item4")
	i5args=GetVariable ("Item5")
	bedargs=GetVariable ("MyBed")
	lightargs=GetVariable ("MyLight")
	ColourNote ("darkred", "black", "*************************** ", "silver", "black", "My Bed ", "darkred", "black", "*****************************\" )
   if b1args == nil then
    ColourNote ("red", "black", "                      A bed has not set.\")
   else
    ColourNote ("silver", "black", "                          "..bedargs )
end
	ColourNote ("darkred", "grey", "****************************************************************\" )
	Note ( "\" )
	ColourNote ("darkred", "black", "************************** ", "silver", "black", "My Light ", "darkred", "black", "****************************\" )
   if b1args == nil then
    ColourNote ("red", "black", "                     A light has not set.\")
   else
    ColourNote ("silver", "black", "                          "..lightargs )
end
	ColourNote ("darkred", "grey", "****************************************************************\" )
	Note ( "\" )
	ColourNote ("silver", "black", "  Item Order ", "darkred", "black", "******************* ", "silver", "black", "Item ", "darkred", "black", "**************************\" )
	ColourNote ("darkred", "grey", "****************************************************************\" )
end
   if i1args == nil then
    ColourNote ("silver", "black", "  1st Item                     ", "darkred", "black", "*", "red", "black", " This item slot is not set.\")
   else
    ColourNote ("silver", "black", "  1st Item                     ", "darkred", "black", "*", "silver", "black", "..i1args )
end
   if i2args == nil then
    ColourNote ("silver", "black", "  2nd Item                     ", "darkred", "black", "*", "red", "black", " This item slot is not set.\")
   else
    ColourNote ("silver", "black", "  2nd Item                     ", "darkred", "black", "*", "silver", "black", "..i2args )
end
   if i3args == nil then
    ColourNote ("silver", "black", "  3rd Item                     ", "darkred", "black", "*", "red", "black", " This item slot is not set.\")
   else
    ColourNote ("silver", "black", "  3rd Item                     ", "darkred", "black", "*", "silver", "black", "..i3args )
end
   if i4args == nil then
    ColourNote ("silver", "black", "  4th Item                     ", "darkred", "black", "*", "red", "black", " This item slot is not set.\")
   else
    ColourNote ("silver", "black", "  4th Item                     ", "darkred", "black", "*", "silver", "black", "..i4args )
end
   if i5args == nil then
    ColourNote ("silver", "black", "  5th Item                     ", "darkred", "black", "*", "red", "black", " This item slot is not set.\")
   else
    ColourNote ("silver", "black", "  5th Item                     ", "darkred", "black", "*", "silver", "black", "..i5args )
end
	ColourNote ("darkred", "grey", "****************************************************************\" )
    Note ( "\" )
	Note ( "\" )
  </send>
  </alias>
  
</aliases>

